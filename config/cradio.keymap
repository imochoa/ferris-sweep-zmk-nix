// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

// {{{1 Includes & Defs

// Origin: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/cradio/cradio.keymap

#include <behaviors.dtsi> // https://github.com/zmkfirmware/zmk/blob/main/app/dts/behaviors.dtsi
#include <dt-bindings/zmk/keys.h> // https://github.com/zmkfirmware/zmk/blob/main/app/include/dt-bindings/zmk/keys.h
#include <dt-bindings/zmk/bt.h> // https://github.com/zmkfirmware/zmk/blob/main/app/include/dt-bindings/zmk/bt.h


// Enable Mouse
#include <dt-bindings/zmk/pointing.h>

// https://peccu.github.io/zmk-cheat-sheet/
// https://franknoirot.co/posts/ferris-sweep-keyboard-layout
// https://github.com/benvallack/zmk-config/blob/master/config/cradio.keymap
//
// https://zmk.dev/docs/keymaps/list-of-keycodes
// auto-layer https://github.com/urob/zmk-auto-layer
// switch out of a layer automatically when pressing an unrelated key (e.g. number layer when not pressing a num)

// Vim hjkl (L,Down,Up,R)
//
// Kinesis
//
// LEFT
// Shift  
// LEFT THUMB Ctrl Alt Back Del
//
// RIGHT
// Shift
// RIGHT THUMB Alt Ctrl Enter Space (windows)

        // To flash:
        // 2x reset OR Bootloader 

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT  k2  &ht LCTRL k3  &ht LGUI  k4
#define HRMR(k1,k2,k3,k4) &ht RGUI  k1  &ht RCTRL k2  &ht RALT  k3  &ht RSHFT k4

#define BAS 0
#define SYM 1
#define LEF 2
#define TRI 3
#define NUM 4
#define NAV 5
#define GAM 6

// Unicode keys
// https://askubuntu.com/questions/1171633/i-can-use-alt-x-to-enter-unicode-on-an-old-machine-how-is-this-possible

// #define EURO 20AC


//╭────┬────┬────┬────┬────╮   ╭────┬────┬────┬────┬────╮
//│ 0  │ 1  │ 2  │ 3  │ 4  │   │ 5  │ 6  │ 7  │ 8  │ 9  │
//├────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┤
//│ 10 │ 11 │ 12 │ 13 │ 14 │   │ 15 │ 16 │ 17 │ 18 │ 19 │
//├────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┤
//│ 20 │ 21 │ 22 │ 23 │ 24 │   │ 25 │ 26 │ 27 │ 28 │ 29 │
//╰────┴────┴────┼────┼────┤   ├────┼────┼────┴────┴────╯
//               │ 30 │ 31 │   │ 32 │ 33 │
//               ╰────┴────╯   ╰────┴────╯


// rango keyboard toggle with ctrl-shift-5

// {{{1 TREE



/ {
// |  {{{1 Combos
// https://zmk.dev/docs/keymaps/combos
    combos {
        compatible = "zmk,combos";
        // Keys
        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 19>; // INPUT
            layers = < BAS >;
            bindings = <&kp ESC>; // OUTPUT
        };
        combo_windows {
            timeout-ms = <50>;
            key-positions = <13 16>;
            layers = < BAS >;
            bindings = <&kp LWIN>;
        };

        // Layers
        gaming_layer_toggle {
            timeout-ms = <50>;
	          key-positions = <0 10 20>;
            layers=<BAS GAM>;
            bindings = <&tog GAM>;
        };
//        combo_caps {
//            timeout-ms = <30>;
//	    key-positions = <10 11 12>;
//            bindings = <&caps_word>;
//        };
//        combo_bt  {
//            timeout-ms = <10>;
//            key-positions = <11 12>;
//            bindings = <&to BT>;
//	    layers = <SM1>; 
//        };
//        lalt {
//            timeout-ms = <20>;
//	    key-positions = <8 9>;
//            bindings = <&kp LALT>; 
//	    layers = <SYS>; 
//        };
//        lclk {
//            timeout-ms = <20>;
//	    key-positions = <10 11>;
//            bindings = <&mkp LCLK>;
//	    layers = <SYS>;
//        };
//        rclk {
//            timeout-ms = <20>;
//	    key-positions = <3 4>;
//            bindings = <&mkp RCLK>;
//	    layers = <SYS>;
//        };
//
    };

// |  {{{1 Macros
// https://zmk.dev/docs/keymaps/behaviors/macros
    macros {
        dodgeslide: dodgeslide {
            label = "Darktide Dodge Slide";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Number of arguments
            wait-ms = <40>;
            bindings
                = <&macro_tap &kp TAB>
                , <&macro_wait_time 200>
                , <&macro_tap &kp LCTRL>
                ;
        };

        // // 2 params macro
        // my_two_param_macro: my_two_param_macro {
        //     // ...
        //     compatible = "zmk,behavior-macro-two-param";
        //     #binding-cells = <2>; // Must be 2
        //     bindings = /* ... */;
        // };

        // euro macro
        // 2 params macro
        euro_macro: euro_macro {
            label = "euro macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 2
            bindings
                    = <&macro_press   &kp LCTRL>
                    , <&macro_press   &kp LSHFT>
                    , <&macro_tap     &kp U &kp N2 &kp N0 &kp A &kp C &kp ENTER >
                    , <&macro_release &kp LCTRL>
                    , <&macro_release &kp LSHFT>
                    ;
        };
    };
  
// |  {{{1 Behaviors
// https://zmk.dev/docs/keymaps/behaviors#key-press-behaviors
// https://zmk.dev/docs/keymaps/behaviors#user-defined-behaviors
    behaviors {
        // [if HELD] if PRESSED {TAPPED}
        // key press &kp KEY
        // tap dance &td0 KEY1 KEY2 KEY3
        // mod-tap &mt [MODIFIER] KEY
        // layer-tap &lt [LAYER] KEY
        // momentary layer &mo [LAYER]
        // to layer &to LAYER
        // toggle layer &tog LAYER
        // sticky key &sk MODIFIER
        // sticky layer &sl LAYER
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE";
            #binding-cells = <0>; // No inputs
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>; // outputs
        };
        td_currency: td_currency {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE Currency";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            // quick-tap-ms = <0>;
            // flavor="tap-preferred";
            bindings = <&kp DOLLAR>, <&euro_macro>;
        };
    };

// |  {{{1 conditional-layers
    conditional_layers {
        compatible = "zmk,conditional-layers";
//        tri_layer {
//            if-layers = <SYM LEF>;
//            then-layer = <TRI>;
//        };
    };

// |  {{{1 Keymap
    keymap {
        compatible = "zmk,keymap";
        // {{{1 LAYER 0 -> BASE
        default_layer { 
            display-name = "Base";
            bindings = <
            &kp Q   &kp W   &kp E  &kp R         &kp T         &kp Y        &kp U      &kp I      &kp O      &kp P
            HRML(A,     S,      D,     F)        &kp G         &kp H        HRMR(J,        K,         L,        SQT)
            &kp Z   &kp X   &kp C  &kp V         &kp B         &kp N        &kp M      &mt SEMI COMMA  &mt COLON DOT  &mt BSLH FSLH
                                   &trans        &kp BSPC      &kp SPACE    &to SYM
            >;
        };

        // {{{1 LAYER 1 -> SYMBOL
        symbols_layer {
            display-name = "Symbols";
            bindings = <
            &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR  &kp PRCNT      &kp CARET   &kp AMPS  &kp STAR  &kp COLON &kp BSPC
            // &kp ESC   &kp AT     &kp SEMI   &kp COLON  &kp TILDE      &kp APOS   &kp LBKT  &kp RBKT  &kp LT    &kp GT
            &kp TAB   &kp QMARK  &kp COMMA  &kp DOT    &euro_macro       &kp DQT    &kp LPAR  &kp RPAR  &kp COLON    &kp ENTER
            &kp BSLH  &kp PIPE   &kp FSLH   &kp AMPS   &kp HASH        &kp GRAVE  &kp LBRC  &kp RBRC  &kp SEMI    &to NAV
                                            &to BAS    &kp ESC        &kp RALT   &to NUM
            >;
        };

        // {{{1 LAYER 2
        left_layer {
            display-name = "Left Layer";
            bindings = <
            &trans     &kp LBKT   &kp LBRC   &kp RBRC   &trans         &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT   &kp TILDE
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH   &kp GRAVE
            &trans     &trans     &trans     &trans     &trans         &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE   &trans
                                             &trans     &trans         &trans     &trans
            >;
        };

        // {{{1 LAYER 3
        tri_layer {
            display-name = "Tri";
            bindings = <
            &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
            &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans  &studio_unlock  &bootloader
            &trans     &trans     &trans    &bt BT_CLR   &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
                                             &trans     &trans         &trans     &trans
            >;
        };

        // {{{1 LAYER 4
        num_layer {
            display-name = "Numbers";
            bindings = <
        		&trans   &trans    &trans &trans   &trans 	         	&kp MINUS &kp N7 &kp N8 &kp N9 &kp BKSP
        		&trans   &trans    &trans &trans   &trans  	         	&kp EQUAL &kp N4 &kp N5 &kp N6 &kp ENTER 
        		&trans   &trans    &trans &trans   &trans   	         	&kp N0    &kp N1 &kp N2 &kp N3 &to NAV
        					    &to BAS             &trans  		         	&sk RALT  &to SYM
		        >;
        };

        // {{{1 LAYER 5
        nav_layer {
            display-name = "Nav";
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                                    &trans &trans &trans &trans

        		// &trans  &mwh SCROLL_LEFT    &mmv MOVE_UP    &mwh SCROLL_RIGHT    &kp NUM_5 			&kp LG(LBKT)   &kp LC(LS(TAB))   &kp RC(TAB) &kp LG(RBKT) &trans
        		// &kp F1 &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp DEL  						&kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp ENTER 
        		// &td LG(GRAVE) GRAVE &mkp RCLK  &mwh SCROLL_UP &mwh SCROLL_DOWN &trans   				&mkp LCLK &kp PG_DN  &kp K_VOL_DN  &trans &trans   
        		// 			 &to 0 &trans  					&sk RALT &to 1 
		        >;
        };
        // {{{1 LAYER 6
        gaming_layer {
            display-name = "Gaming";
            bindings = < 
            &kp N1    &kp N2 &kp N3 &kp N4      &kp N5       &trans &trans &trans &trans &trans
            &kp LSHFT &kp A  &kp W  &kp D       &kp R        &trans &trans &trans &trans &trans 
            &kp LCTRL &kp G  &kp S  &kp E       &kp F        &trans &trans &trans &trans &trans 
                                    &dodgeslide &kp SPACE    &trans &trans
            >; // &mkp MB3 // mouse button 3
        };
    };
};

// {{{1 Reference

// &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
// &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
// &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
//                      &trans &trans &trans &trans

//╭──────────┬──────────┬──────────┬────────────┬──────────╮   ╭──────────┬────────────┬──────────┬──────────┬──────────╮
//│  Q       │  W       │  E       │  R         │  T       │   │  Y       │    U       │  I       │  O       │  P       │
//├──────────┼──────────┼──────────┼────────────┼──────────┤   ├──────────┼────────────┼──────────┼──────────┼──────────┤
//│  A       │  S       │  D       │  F         │  G       │   │  H       │    J       │  K       │  L       │ ' "      │
//├──────────┼──────────┼──────────┼────────────┼──────────┤   ├──────────┼────────────┼──────────┼──────────┼──────────┤
//│  Z       │  X       │  C       │  V         │  B       │   │  N       │    M       │ , <      │ . >      │ / ?      │
//╰──────────┴──────────┴──────────┼────────────┼──────────┤   ├──────────┼────────────┼──────────┴──────────┴──────────╯
//                                 ╰────────────┴──────────╯   ╰──────────┴────────────╯


// vim:fdm=marker:fen:fdl=0:
