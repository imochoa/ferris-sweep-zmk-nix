// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

// {{{1 Includes & Defs

// Origin: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/cradio/cradio.keymap

#include <behaviors.dtsi> // https://github.com/zmkfirmware/zmk/blob/main/app/dts/behaviors.dtsi
#include <dt-bindings/zmk/keys.h> // https://github.com/zmkfirmware/zmk/blob/main/app/include/dt-bindings/zmk/keys.h
#include <dt-bindings/zmk/bt.h> // https://github.com/zmkfirmware/zmk/blob/main/app/include/dt-bindings/zmk/bt.h


// Enable Mouse
#include <dt-bindings/zmk/pointing.h>

#include "./34.h"



// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT  k2  &ht LCTRL k3  &ht LGUI  k4
#define HRMR(k1,k2,k3,k4) &ht RGUI  k1  &ht RCTRL k2  &ht RALT  k3  &ht RSHFT k4

#define BAS 0
#define SYM 1
#define NUM 2
// #define NAV 3
#define SYS 3

// rango keyboard toggle with ctrl-shift-5

// {{{1 TREE

// ref layers https://github.com/zmkfirmware/zmk/blob/e93cd31a5866cd4f50385bece7a3fb770f2ca6f8/app/boards/shields/cradio/cradio.keymap#L4

/ {
// |  {{{1 Combos
// https://zmk.dev/docs/keymaps/combos
    combos {
        compatible = "zmk,combos";
        // Keys
        key_super {
            // Windows key was missing!
            key-positions = <LM1 RM1>;
            timeout-ms = <50>;
            // layers = < BAS SYM >;
            bindings = <&kp LWIN>;
        };
        key_escape {
            // Wanted a way to avoid 2 layer switches while pressing escape in vim
            // emulates C-[
            key-positions = <LB4 RT4>;
            timeout-ms = <50>;
            // layers = < BAS SYM >;
            bindings = <&kp ESC>;
        };
        // Layers
        // toggle_gaming_layer {
        //     key-positions = <0 10 20>;
        //     timeout-ms = <50>;
        //     layers=<BAS GAM>;
        //     bindings = <&tog GAM>;
        // };
        // to_sys_layer {
        //     timeout-ms = <50>;
        //     key-positions = <4 14 24>;
        //     layers=<BAS SYS>;
        //     bindings = <&to SYS>;
        // };
        // // it's good to have a way to switch to the system layer on each half of the keyboard
        // lcombo_to_sys {
        //     timeout-ms = <50>;
        //     key-positions = <LT0 LM0 LB0>;
        //     bindings = <&to SYS>;
        // };
        // rcombo_to_sys {
        //     timeout-ms = <50>;
        //     key-positions = <RT0 RM0 RB0>;
        //     bindings = <&to SYS>;
        // };
        
    };

// |  {{{1 Macros
// https://zmk.dev/docs/keymaps/behaviors/macros
    macros {
    };
  
// |  {{{1 Behaviors
// https://zmk.dev/docs/keymaps/behaviors#key-press-behaviors
// https://zmk.dev/docs/keymaps/behaviors#user-defined-behaviors
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE";
            #binding-cells = <0>; // No inputs
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>; // outputs
        };
        // https://zmk.dev/docs/keymaps/behaviors/hold-tap?examples=home_row_mods#layer-tap
        /* urob timeless HRM */
        /* Left-hand HRMs. */
        hml: hml {
            compatible = "zmk,behavior-hold-tap";        
            #binding-cells = <2>;
            flavor = "balanced";
            // tapping-term-ms = <280>;
            // quick-tap-ms = <175>;
            // require-prior-idle-ms = <150>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        /* Right-hand HRMs. */
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";        
            #binding-cells = <2>;
            flavor = "balanced";
            // tapping-term-ms = <280>;
            // quick-tap-ms = <175>;
            // require-prior-idle-ms = <150>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

// |  {{{1 conditional-layers
    conditional_layers {
        compatible = "zmk,conditional-layers";
       tri_layer {
           if-layers = <SYM NUM>;
           then-layer = <SYS>;
       };
    };

// |  {{{1 Keymap
    keymap {
        compatible = "zmk,keymap";
        // {{{1 LAYER 0 -> BAS
        default_layer { 
            display-name = "Base";
            bindings = <
            &kp Q           &kp W        &kp E        &kp R         &kp T     /* | */    &kp Y      &kp U         &kp I         &kp O        &kp P
            &hml LSHIFT  A  &hml LALT S  &hml LCTRL D &hml LGUI  F  &kp G     /* | */    &kp H      &hmr RGUI  J  &hmr RCTRL K  &hmr RALT  L &hmr RSHIFT SEMI
            &kp Z           &kp X        &kp C        &kp V         &kp B     /* | */    &kp N      &kp M         &kp COMMA     &kp DOT      &kp FSLH
                                                      &lt 1 BKSP    &kp DEL   /* | */    &kp TAB    &lt 2 SPACE
 
            >; // kinesis has enter where I put tab
        };

        // {{{1 LAYER 1 -> SYM
        symbols_layer {
            display-name = "Symbols";
            bindings = <
            &kp EXCL          &kp AT          &kp HASH       &kp DOLLAR      &kp PRCNT   /* | */    &kp CARET &kp AMPS       &kp STAR         &mt UNDER MINUS   &kp EQUAL
            &hml LSHIFT ESC   &hml LALT GRAVE &hml LCTRL SQT &hml LGUI DQT   &none       /* | */    &none     &hmr RGUI LPAR &hmr RCTRL RPAR  &hmr RALT BSLH    &hmr RSHIFT ENTER
            &none             &none           &kp LEFT       &kp RIGHT       &none       /* | */    &none     &kp UP         &kp DOWN         &kp LBKT          &kp RBKT 
                                                             &trans          &trans      /* | */    &trans    &trans
            >; 
            // " is a bit awkward to type
            // left-side shift requires left thumb and right shift -> weird! avoid it
            // TODO: put unused keys in <24> <25> (e.g. ^ %)
        };
        // {{{1 LAYER 2 -> NUM
        num_layer {
            display-name = "Numbers";
            bindings = <
              &none            &none           &none            &none           &none      /* | */   &kp MINUS   &kp N7       &kp N8        &kp N9          &none
              &hml LSHIFT ESC  &hml LALT HASH  &hml LCTRL HASH  &hml LGUI HASH  &kp EQUAL  /* | */   &none       &hmr RGUI N4 &hmr RCTRL N5 &hmr RALT  N6   &hmr RSHIFT ENTER
              &none            &none           &none            &none           &none      /* | */   &none       &kp N1       &kp N2        &kp N3          &kp N0
                                                                &trans          &trans     /* | */   &trans      &trans
              >;
              // F1 - F24
              // smart number layer?
        };

        // // {{{1 LAYER 3
        //  nav_layer {
        //      display-name = "Nav";
        //      bindings = <
        //        &kp N1       &kp N2  &kp N3  &kp N4      &kp N5  /* | */    &none       &none      &none       &none        &kp BKSP
        //        &kp LSHIFT   &kp Q   &kp W   &kp E       &kp R   /* | */    &kp LEFT    &kp DOWN   &kp UP      &kp RIGHT    &kp ENTER
        //        &kp LCTRL    &kp A   &kp S   &kp D       &kp G   /* | */    &none       &kp UP     &kp DOWN    &none        &none
        //                                     &kp SPACE   &none   /* | */    &none       &to BAS
        //      >;
        //  };
        //  // TODO: get the navigation commands from ben
        
        // {{{1 LAYER 4
        sys_layer {
          // Don't need &sys_reset, right?
            display-name = "System";
            bindings = <
            &none            &none         &none        &none         &none         /* | */    &none        &none         &none         &none         &studio_unlock 
            &bt BT_SEL 3     &bt BT_SEL 2  &bt BT_SEL 1 &bt BT_SEL 0  &none         /* | */    &none        &none         &none         &none         &none
            &studio_unlock   &none         &none        &none         &bootloader   /* | */    &bootloader  &none         &none         &none         &bt BT_CLR
                                                        &trans        &trans        /* | */    &trans       &trans
            >;
        };

        // {{{1 LAYER 5

        // {{{1 LAYER 6

    };
};


// vim:fdm=marker:fen:fdl=0:
